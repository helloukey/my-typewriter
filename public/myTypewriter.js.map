{"mappings":"AAAA,MAAM,mCAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,AAAC;AAE/D,IAAI,2BAAK,GAAG,CAAC,AAAC;AACd,IAAI,2BAAK,GAAG,CAAC,AAAC;AACd,IAAI,iCAAW,GAAG,EAAE,AAAC;AACrB,IAAI,mCAAa,GAAG,EAAE,AAAC;AACvB,IAAI,+BAAS,GAAG,IAAI,AAAC;AAErB,MAAM,yCAAU,GAAG,CAAC,SAClB,KAAK,CAAA,eACL,WAAW,GAAG,IAAI,cAClB,SAAS,GAAG,CAAC,eACb,UAAU,GAAG,GAAG,eAChB,UAAU,GAAG,GAAG,UAChB,KAAK,GAAG,GAAG,KACZ,GAAK;IACJ,eAAe;IACf,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,AAAC;IACnD,WAAW,CAAC,WAAW,GAAG,GAAG,CAAC;IAC9B,WAAW,CAAC,IAAM;QAChB,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACpE,EAAE,UAAU,CAAC,CAAC;IAEf,MAAM,MAAM,GAAG,IAAM;QACnB,yBAAyB;QACzB,IAAI,2BAAK,KAAK,KAAK,CAAC,MAAM,EAAI,2BAAK,GAAG,CAAC;QACvC,+BAA+B;QAC/B,iCAAW,GAAG,KAAK,CAAC,2BAAK,CAAC,CAAC;QAC3B,2CAA2C;QAC3C,IAAI,mCAAa,CAAC,MAAM,KAAK,iCAAW,CAAC,MAAM,EAC7C,+BAAS,GAAG,KAAK,CAAC;QAEpB,2CAA2C;QAC3C,IAAI,mCAAa,CAAC,MAAM,KAAK,CAAC,EAC5B,+BAAS,GAAG,IAAI,CAAC;QAGnB,IAAI,+BAAS,EAAE;YACb,4BAA4B;YAC5B,IAAI,SAAS,GAAG,CAAC,EAAI,KAAK,GAAG,SAAS;YACtC,mCAAa,GAAG,iCAAW,CAAC,KAAK,CAAC,CAAC,EAAE,2BAAK,EAAE,CAAC,CAAC;YAC9C,mCAAa,CAAC,WAAW,GAAG,mCAAa,CAAC;YAC1C,mCAAa,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YACvC,IAAI,mCAAa,CAAC,MAAM,KAAK,iCAAW,CAAC,MAAM,EAC7C,4BAA4B;YAC5B;gBAAA,IAAI,WAAW,GAAG,CAAC,EACjB,uBAAuB;gBACvB,KAAK,GAAG,WAAW,CAAC;aACrB,AACF;SACF,MAAM;YACL,2BAA2B;YAC3B,IAAI,UAAU,GAAG,CAAC,EAChB,6BAA6B;YAC7B,KAAK,GAAG,UAAU,CAAC;YAErB,mCAAa,GAAG,iCAAW,CAAC,KAAK,CAAC,CAAC,EAAE,iCAAW,CAAC,MAAM,GAAG,2BAAK,EAAE,CAAC,CAAC;YACnE,mCAAa,CAAC,WAAW,GAAG,mCAAa,CAAC;YAC1C,mCAAa,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YACvC,mCAAmC;YACnC,IAAI,mCAAa,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC9B,2BAAK,EAAE,CAAC;gBACR,2BAAK,GAAG,CAAC,CAAC;gBACV,+BAAS,GAAG,IAAI,CAAC;aAClB;SACF;QACD,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;KAC3B,AAAC;IAEF,MAAM,EAAE,CAAC;CACV","sources":["src/myTypewriter.js"],"sourcesContent":["const textContainer = document.querySelector(\"#my-typewriter\");\r\n\r\nlet count = 0;\r\nlet index = 0;\r\nlet currentText = \"\";\r\nlet containerText = \"\";\r\nlet direction = true;\r\n\r\nconst typeWriter = ({\r\n  texts,\r\n  letterPause = 1200,\r\n  typeSpeed = 0,\r\n  eraseSpeed = 100,\r\n  blinkSpeed = 300,\r\n  speed = 200,\r\n}) => {\r\n  // Blink Cursor\r\n  const blinkCursor = document.createElement(\"span\");\r\n  blinkCursor.textContent = \"|\";\r\n  setInterval(() => {\r\n    blinkCursor.style.opacity = blinkCursor.style.opacity == 0 ? 1 : 0;\r\n  }, blinkSpeed);\r\n\r\n  const typing = () => {\r\n    // Reset count after loop\r\n    if (count === texts.length) { count = 0 }\r\n    // Grab current text from array\r\n    currentText = texts[count];\r\n    // Start erasing when all letters completed\r\n    if (containerText.length === currentText.length) {\r\n      direction = false;\r\n    }\r\n    // Start typing when letter length equals 1\r\n    if (containerText.length === 1) {\r\n      direction = true;\r\n    }\r\n\r\n    if (direction) {\r\n      // typing speed if available\r\n      if (typeSpeed > 0) { speed = typeSpeed }\r\n      containerText = currentText.slice(0, index++);\r\n      textContainer.textContent = containerText;\r\n      textContainer.appendChild(blinkCursor);\r\n      if (containerText.length === currentText.length) {\r\n        // If letterPause if defined\r\n        if (letterPause > 0) {\r\n          // Pause at last letter\r\n          speed = letterPause;\r\n        }\r\n      }\r\n    } else {\r\n      // Erase speed if available\r\n      if (eraseSpeed > 0) {\r\n        // change speed to eraseSpeed\r\n        speed = eraseSpeed;\r\n      }\r\n      containerText = currentText.slice(0, currentText.length - index++);\r\n      textContainer.textContent = containerText;\r\n      textContainer.appendChild(blinkCursor);\r\n      // Move to next word when completed\r\n      if (containerText.length === 1) {\r\n        count++;\r\n        index = 0;\r\n        direction = true;\r\n      }\r\n    }\r\n    setTimeout(typing, speed);\r\n  };\r\n\r\n  typing();\r\n}\r\n\r\nexport { typeWriter }"],"names":[],"version":3,"file":"myTypewriter.js.map"}